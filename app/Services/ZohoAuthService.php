<?php
namespace App\Services;

use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class ZohoAuthService
{
    public function getAccessToken()
    {
        $token = Cache::get('zoho_access_token');

        if (!$token) {
            Log::warning('üîÑ –¢–æ–∫–µ–Ω Zoho –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è! –û–Ω–æ–≤–ª—é—î–º–æ...');
            $token = $this->refreshAccessToken();
            Cache::put('zoho_access_token', $token, now()->addSeconds(3500));
        }

        Log::info('üîë –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç–æ–∫–µ–Ω Zoho: ' . $token);
        return $token;
    }

    public function refreshAccessToken()
    {
        Log::warning('–ó–∞–ø–∏—Ç –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ Zoho!');

        $response = Http::asForm()->post(env('ZOHO_ACCOUNTS_URL') . '/oauth/v2/token', [
            'refresh_token' => env('ZOHO_REFRESH_TOKEN'),
            'client_id' => env('ZOHO_CLIENT_ID'),
            'client_secret' => env('ZOHO_CLIENT_SECRET'),
            'grant_type' => 'refresh_token',
        ])->json();

        if (isset($response['access_token'])) {
            Log::info('‚úÖ –ù–æ–≤–∏–π —Ç–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–æ: ' . $response['access_token']);
            return $response['access_token'];
        }

        Log::error('‚ùå –ü–û–ú–ò–õ–ö–ê –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ Zoho: ' . json_encode($response));
        throw new \Exception('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø—É Zoho.');
    }
}
